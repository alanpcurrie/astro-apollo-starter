---
import Layout from "../../layouts/Layout.astro";
import { blipsStore } from "../../stores/radarStore";
import { match, Pattern } from "ts-pattern";
import * as styles from "./Blip.css";
import {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async () => {
  const blips = blipsStore.get();
  return blips.map((blip) => {
    return {
      params: { blipId: blip.id },
      props: { propId: blip.id },
    };
  });
}) satisfies GetStaticPaths;

const blips = blipsStore.get();
const { blipId } = Astro.params as Params;
// const { propId } = Astro.props;

const blip = match(blipId)
  .with(Pattern.string, (id) => blips.find((b) => b.id === id))
  .exhaustive();
---

<Layout>
  <h1 class:list={[styles.twStyle]} slot="left">
    {blip?.name}
  </h1>
  <h2 class:list={[styles.twStyle]} slot="left">
    {
      blip?.hasAdr ? (
        <>
          <a href="../adrs/astro">adr link</a>
        </>
      ) : (
        "await adr"
      )
    }
  </h2>
  <h1 class:list={[styles.twStyle]} slot="center">
    {blip?.description}
  </h1>
  <h1 class:list={[styles.twStyle]} slot="right">
    {blip?.ring}
  </h1>
</Layout>
